deployment:
  kind: Deployment
  replicas: 1
  image: docker.io/ezconnect/hugo-theme
  imagePullSecrets: []
  pullPolicy: IfNotPresent
  env:
    COLLECTION_TYPES: contributor,article,document,career,project,page,resume
    DEFAULT_LOCALE: en
    GIT_BRANCH: main
    GIT_COMMIT: Sync CMS
    GIT_EMAIL: bot@ez-connect.net
    GIT_MSG: Sync CMS
    GIT_REPO: https://github.com/ez-connect/hugo-theme.git
    GIT_TIMEOUT: "300"
    GIT_USERNAME: Bot
    HUGO_SITE_DIR: web
    SINGLE_TYPES: site,home,nav,about
    SSH_PRIVATE:
      valueFrom:
        secretKeyRef:
          key: private
          name: ssh-auth
    SSH_PUBLIC:
      valueFrom:
        secretKeyRef:
          key: public
          name: ssh-auth
    STRAPI_API_TOKEN: api-token
    STRAPI_HOST: http://localhost:1337
  command: []
  args: []
  initContainers: []
  liveness: {}
  readiness: {}
service:
  type: ClusterIP
  ports:
    http:
      port: 80
    webhook:
      port: 8082
ingress:
  enabled: true
  className: nginx
  annotations:
    nginx.ingress.kubernetes.io/auth-signin: https://auth.ez-connect.net/oauth2/start?rd=https://$host$request_uri
    nginx.ingress.kubernetes.io/auth-snippet: |
      if ($request_uri !~ "/document/") {
        return 200;
      }
    nginx.ingress.kubernetes.io/auth-url: https://auth.ez-connect.net/oauth2/auth
  domain: ez-connect.net
  tls: ez-connect.net
  hosts:
    http:
      subdomain: hugo-theme
      path: /
      type: Prefix
persistent:
  enabled: true
  volumes:
    data:
      accessModes:
        - ReadWriteOnce
      size: 256Mi
      path: /home/web
podSecurityContext: {}
securityContext: {}
nodeSelector: {}
affinity: {}
tolerations: []
resource: {}
autoscaling:
  enabled: false
  min: 1
  max: 3
  cpu: 0.5
  memory: 0.5
serviceAccount:
  enabled: false
