#
# Code generated by `gkgen` based on Helm template
#

# Deployment or StatefulSet
# https://kubernetes.io/docs/concepts/workloads/controllers/deployment/
# https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/
deployment:
  kind: Deployment # one of [Deployment|StatefulSet]
  replicas: 1 # specified number of pod replicas are running at any given time
  # annotations: {}
  image: docker.io/ezconnect/hugo-theme
  # tag: latest # optional, default is the current version
  # imagePullSecrets: # optional, leave it blank for public registries
  #   - gitlab-auth
  pullPolicy: IfNotPresent # IfNotPresent | Always
  # Environment variables for the containers that run in the Pod
  env:
    STRAPI_HOST: http://strapi-hugo.prod.svc.cluster.local:1337
    # STRAPI_API_TOKEN: api-token
    # HUGO_SITE_DIR: web
    # DEFAULT_LOCALE: en
    # SINGLE_TYPES: site,home,nav,about
    # COLLECTION_TYPES: contributor,article,document,career,project,page,resume
    GIT_USERNAME: Bot
    GIT_EMAIL: bot@ez-connect.net
    GIT_REPO: https://github.com/ez-connect/hugo-theme.git
    GIT_BRANCH: main
    GIT_MSG: Sync CMS
    GIT_TIMEOUT: "300"
    SSH_PRIVATE:
      valueFrom:
        secretKeyRef:
          name: ssh-auth
          key: private
    SSH_PUBLIC:
      valueFrom:
        secretKeyRef:
          name: ssh-auth
          key: public
  # The command and arguments that you define in the configuration file
  # override the default command and arguments provided by the container image.
  # If you define args, but do not define a command, the default command
  # is used with your new arguments.
  command: []
  args: []

  # Init container
  # init:
  #   image: docker.io/busy-box
  #   command: []
  #   args: []
  #   env: {}

  # Configure Liveness, Readiness and Startup Probes
  # https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
  liveness: {}
  readiness: {}

# Exposes the application running on a set of Pods as a network service
service:
  type: ClusterIP
  port:
    http:
      port: 80
    webhook:
      port: 8082

ingress:
  enabled: true
  className: nginx
  annotations:
    nginx.ingress.kubernetes.io/auth-url: https://auth.ez-connect.net/oauth2/auth
    nginx.ingress.kubernetes.io/auth-signin: https://auth.ez-connect.net/oauth2/start?rd=https://$host$request_uri
    nginx.ingress.kubernetes.io/auth-snippet: |
      if ($request_uri !~ "/document/") {
        return 200;
      }
  domain: ez-connect.net
  tls: ez-connect.net
  host:
    http:
      subdomain: hugo-theme
      path: /
      type: Prefix

# An addidition ingress if it have different annotations
ingressEx:
  enabled: false
  # annotations: {}
  # host:
  #   webhook:
  #     subdomain: webhook
  #     path: /
  #     type: Prefix

#  Persistent volumes
# https://kubernetes.io/docs/concepts/storage/persistent-volumes/
persistent:
  enabled: true
  volume:
    hugo-theme:
      # class: default # manual, nfs-csi, longhorn... leave empty to use the default
      accessModes:
        - ReadWriteOnce
      size: 256Mi
      path: /home/webhook

# podSecurityContext:
#   runAsUser: 1000
#   runAsGroup: 3000
#   fsGroup: 2000

# securityContext:
#   runAsUser: 65534
#   allowPrivilegeEscalation: false

# nodeSelector:
#   kubernetes.io/hostname: microk8s

# https://kubernetes.io/docs/tasks/configure-pod-container/assign-pods-nodes-using-node-affinity/#schedule-a-pod-using-required-node-affinity
# affinity: {}

# https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/
# tolerations: []

# Resource requests and limits of Pod and container
# https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#resource-requests-and-limits-of-pod-and-container
# resource:
#   requests:
#     cpu: 0.2
#     memory: 500Mi
#   limits:
#     cpu: 0.5
#     memory: 1Gi

# Automatically updates a workload resource (such as a Deployment or StatefulSet),
#  with the aim of automatically scaling the workload to match demand.
#  https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/
autoscaling:
  enabled: false
  min: 1
  max: 3
  cpu: 0.5
  memory: 0.5

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""
